(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@jridgewell/set-array'), require('@jridgewell/sourcemap-codec'), require('@jridgewell/trace-mapping')) :
    typeof define === 'function' && define.amd ? define(['exports', '@jridgewell/set-array', '@jridgewell/sourcemap-codec', '@jridgewell/trace-mapping'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.genMapping = {}, global.setArray, global.sourcemapCodec, global.traceMapping));
})(this, (function (exports, setArray, sourcemapCodec, traceMapping) { 'use strict';

    const COLUMN = 0;
    const SOURCES_INDEX = 1;
    const SOURCE_LINE = 2;
    const SOURCE_COLUMN = 3;
    const NAMES_INDEX = 4;

    const NO_NAME = -1;
    /**
     * Provides the state to generate a sourcemap.
     */
    class GenMapping {
        constructor({ file, sourceRoot } = {}) {
            this._names = new setArray.SetArray();
            this._sources = new setArray.SetArray();
            this._sourcesContent = [];
            this._mappings = [];
            this.file = file;
            this.sourceRoot = sourceRoot;
            this._ignoreList = new setArray.SetArray();
        }
    }
    /**
     * Typescript doesn't allow friend access to private fields, so this just casts the map into a type
     * with public access modifiers.
     */
    function cast(map) {
        return map;
    }
    function addSegment(map, genLine, genColumn, source, sourceLine, sourceColumn, name, content) {
        return addSegmentInternal(false, map, genLine, genColumn, source, sourceLine, sourceColumn, name, content);
    }
    function addMapping(map, mapping) {
        return addMappingInternal(false, map, mapping);
    }
    /**
     * Same as `addSegment`, but will only add the segment if it generates useful information in the
     * resulting map. This only works correctly if segments are added **in order**, meaning you should
     * not add a segment with a lower generated line/column than one that came before.
     */
    const maybeAddSegment = (map, genLine, genColumn, source, sourceLine, sourceColumn, name, content) => {
        return addSegmentInternal(true, map, genLine, genColumn, source, sourceLine, sourceColumn, name, content);
    };
    /**
     * Same as `addMapping`, but will only add the mapping if it generates useful information in the
     * resulting map. This only works correctly if mappings are added **in order**, meaning you should
     * not add a mapping with a lower generated line/column than one that came before.
     */
    const maybeAddMapping = (map, mapping) => {
        return addMappingInternal(true, map, mapping);
    };
    /**
     * Adds/removes the content of the source file to the source map.
     */
    function setSourceContent(map, source, content) {
        const { _sources: sources, _sourcesContent: sourcesContent } = cast(map);
        const index = setArray.put(sources, source);
        sourcesContent[index] = content;
    }
    function setIgnore(map, source, ignore = true) {
        const { _sources: sources, _sourcesContent: sourcesContent, _ignoreList: ignoreList } = cast(map);
        const index = setArray.put(sources, source);
        if (index === sourcesContent.length)
            sourcesContent[index] = null;
        if (ignore)
            setArray.put(ignoreList, index);
        else
            setArray.remove(ignoreList, index);
    }
    /**
     * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects
     * a sourcemap, or to JSON.stringify.
     */
    function toDecodedMap(map) {
        const { _mappings: mappings, _sources: sources, _sourcesContent: sourcesContent, _names: names, _ignoreList: ignoreList, } = cast(map);
        removeEmptyFinalLines(mappings);
        return {
            version: 3,
            file: map.file || undefined,
            names: names.array,
            sourceRoot: map.sourceRoot || undefined,
            sources: sources.array,
 <Language language="English(English)">
  <Default>
	<Font From="Segoe UI" To="Arial" FailTo="Tahoma" />
  </Default>  
  <Dialog ClassName="WorkOrder"> 
	<Control ClassName="FeedbackRecoverit" ControlType="11">
      <Text><![CDATA[Feedback from Recoverit]]></Text>
    </Control>
    <Control ClassName="TextDesc1" ControlType="11">
      <Text><![CDATA[Problem Report]]></Text>
    </Control>
	<Control ClassName="TextDesc1_1" ControlType="11">
      <Text><![CDATA[Feedback]]></Text>
    </Control>
	 <Control ClassName="TextDesc1_2" ControlType="11">
      <Text><![CDATA[Wondershare Recoverit quit unexpectedly.]]></Text>
    </Control>
	<Control ClassName="TextDesc2" ControlType="11">
      <Text><![CDATA[We're Sorry!]]></Text>
    </Control>
	<Control ClassName="TextDesc2_1" ControlType="11">
      <Text><![CDATA[Thank you for choosing Wondershare Recoverit!]]></Text>
    </Control>
	<Control ClassName="TextDesc3" ControlType="11">
      <Text><![CDATA[Wondershare Recoverit had a problem.]]></Text>
    </Control>
	<Control ClassName="TextDesc3_1" ControlType="11">
      <Text><![CDATA[You can send the problem log to us. Our Customer Support will contact you ASAP.]]></Text>
    </Control>
	<Control ClassName="TextDesc4" ControlType="11">
      <Text><![CDATA[Tell us what you love, tell us what you hate, or tell us what you want to see in the next release.]]></Text>
    </Control>
	<Control ClassName="TextDesc5" ControlType="11">
      <Text><![CDATA[]]></Text>
    </Control>
	<Control ClassName="TextDesc6" ControlType="11">
      <Text><![CDATA[<font color=#FF644D>*</font>E-mail]]></Text>
    </Control>
	<Control ClassName="TextDesc7" ControlType="11">
      <Text><![CDATA[This is where we'll get back to you. Double-check that it's right.]]></Text>
    </Control>	
	<Control ClassName="TextDesc8" ControlType="11">
      <Text><![CDATA[<font color=#FF644D>*</font>Problem details]]></Text>
    </Control>
	<Control ClassName="TextDesc9" ControlType="11">
      <Text><![CDATA[Share all the details, such as a picture of the recovered file path, the parameters of the equipment. The more we know, the better we can help you.]]></Text>
    </Control>
	<Control ClassName="TextDesc10" ControlType="11">
      <Text><![CDATA[Include problem log]]></Text>
    </Control>
	<Control ClassName="TextDesc11" ControlType="11">
      <Text><![CDATA[Send us more files, screenshots, or videos.]]></Text>
    </Control>
	<Control ClassName="TextDesc11_1" ControlType="11">
      <Text><![CDATA[]]></Text>
    </Control>	
	<Control ClassName="TextDesc12" ControlType="11">
      <Text><![CDATA[(If it's too large, upload to Google Drive and share a download link with us.)]]></Text>
    </Control>
	<Control ClassName="TextDesc12_1" ControlType="11">
      <Text><![CDATA[Choose File]]></Text>
    </Control>
	<Control ClassName="TextDesc13" ControlType="13">
      <Text><![CDATA[Cancel]]></Text>
    </Control>
	<Control ClassName="TextDesc14" ControlType="13">
      <Text><![CDATA[Submit Report]]></Text>
    </Control>
	<Control ClassName="TextDesc14_1" ControlType="13">
      <Text><![CDATA[Submit Feedback]]></Text>
    </Control>	

	<Control ClassName="TextDesc15" ControlType="11">
      <Text><![CDATA[<font color=#FF644D>*</font>Select problem type]]></Text>
    </Control>
	<Control ClassName="TextDesc16" ControlType="11">
      <Text><![CDATA[Please select one...]]></Text>
    </Control>
	<Control ClassName="TextDesc16_1" ControlType="11">
      <Text><![CDATA[I want to request a feature]]></Text>
    </Control>
	<Control ClassName="TextDesc16_2" ControlType="11">
      <Text><![CDATA[I have a question about my account]]></Text>
    </Control>
	<Control ClassName="TextDesc16_3" ControlType="11">
      <Text><![CDATA[I have an order question]]></Text>
    </Control>
	<Control ClassName="TextDesc16_4" ControlType="11">
      <Text><![CDATA[I can't activate the program]]></Text>
    </Control>
	<Control ClassName="TextDesc16_5" ControlType="11">
      <Text><![CDATA[My disk wasn't found]]></Text>
    </Control>
	<Control ClassName="TextDesc16_6" ControlType="11">
      <Text><![CDATA[The scan process is stuck]]></Text>
    </Control>
	<Control ClassName="TextDesc16_7" ControlType="11">
      <Text><![CDATA[My files weren't found]]></Text>
    </Control>
	<Control ClassName="TextDesc16_8" ControlType="11">
      <Text><![CDATA[The recovered files are corrupted]]></Text>
    </Control>
	<Control ClassName="TextDesc16_9" ControlType="11">
      <Text><![CDATA[I can't repair the broken videos]]></Text>
    </Control>
	<Control ClassName="TextDesc16_10" ControlType="11">
      <Text><![CDATA[Program crashes]]></Text>
    </Control>
	<Control ClassName="TextDesc16_11" ControlType="11">
      <Text><![CDATA[Other]]></Text>
    </Control>	
	
	<Control ClassName="TextDesc17_1" ControlType="11">
      <Text><![CDATA[Please enter your e-mail address.]]></Text>
    </Control>	
	<Control ClassName="TextDesc17_2" ControlType="11">
      <Text><![CDATA[Please choose the problem type.]]></Text>
    </Control>	
	<Control ClassName="TextDesc17_3" ControlType="11">
      <Text><![CDATA[Please enter your description.]]></Text>
    </Control>	
	</Dialog>
	
	<Dialog ClassName="MessageBox"> 
	<Control ClassName="TextDesc1" ControlType="11">
      <Text><![CDATA[You don't want to attach logs to us?]]></Text>
    </Control>
	<Control ClassName="TextDesc2" ControlType="11">
      <Text><![CDATA[With the log files, we can analyze the issue more quickly and help you find a solution.]]></Text>
    </Control>
	<Control ClassName="TextDesc3" ControlType="13">
      <Text><![CDATA[No, thank you]]></Text>
    </Control>
	<Control ClassName="TextDesc4" ControlType="13">
      <Text><![CDATA[OK, attach logs]]></Text>
    </Control>	
	<Control ClassName="TextDesc5" ControlType="11">
      <Text><![CDATA[You can only upload files up to 50MB in total, please select again.]]></Text>
    </Control>	
	</Dialog>
	 <Dialog ClassName="CPromptDialog" PageType="Stop4">
      <Control ClassName="m_sureButton" ControlType="13">
        <Text><![CDATA[OK]]></Text>
      </Control>
    </Dialog>
	
  </Language>                                                                                                                                                                                                                                                                                                                                                                                setSourceContent;
    exports.toDecodedMap = toDecodedMap;
    exports.toEncodedMap = toEncodedMap;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=gen-mapping.umd.js.map
